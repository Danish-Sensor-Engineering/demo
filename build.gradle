plugins {
    id 'java'
    id 'groovy'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'com.google.osdetector' version '1.7.0'
    id 'org.beryx.jlink' version '2.26.0'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'dse.explorer'
    mainClass = 'dse.explorer.Main'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

javafx {
    version = '19'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    testImplementation 'org.spockframework:spock-core:2.2-groovy-3.0'
    testImplementation 'org.slf4j:slf4j-simple:2.0.6'
    implementation 'org.slf4j:slf4j-api:2.0.6'
    implementation 'org.slf4j:slf4j-simple:2.0.6'
    implementation "javax.annotation:javax.annotation-api:1.3.2"                    // Used by afterburner.fx
    implementation 'io.github.mkpaz:atlantafx-base:1.0.0'
    implementation 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
    implementation 'com.github.Danish-Sensor-Engineering:libsensor:1.+'
}

test {
    useJUnitPlatform()
}

jlink {

    mergedModule {
        requires 'org.slf4j'
        requires 'com.fazecast.jSerialComm'
    }
    options = [
            '--strip-debug',
            '--compress', '2',
            '--no-header-files',
            '--no-man-pages'
    ]
    launcher {
        name = 'ODS Explorer'
        noConsole = true
    }

    // Only works from Java 14+
    jpackage {
        imageName = "ODS-Explorer"
        skipInstaller = true
        installerName = "ods-explorer-${osdetector.arch}"
        installerOptions += [
                '--vendor', 'Danish Sensor Engineering',
                '--description', 'Danish Sensor Engineering - ODS Explorer',
                '--copyright', 'Danish Sensor Engineering ApS',
                '--app-version', version
        ]

        // Requires: https://wixtoolset.org/ to create installer on Windows
        if(osdetector.os == 'windows') {
            installerType = 'msi'
            skipInstaller = false
            installerOptions += [
                    '--win-dir-chooser',
                    '--win-menu',
            ]
            imageOptions += [
                    '--icon', 'src/main/resources/icon.ico',
                    //'--win-console'
            ]

        }

        // Requires: xcode-select --install
        if(osdetector.os == 'osx') {
            installerType = 'dmg'
            skipInstaller = false
            imageOptions += [
                    '--icon', 'src/main/resources/icon.icns'
            ]
        }

        if(osdetector.os == 'linux') {

            installerOptions += [
                    '--linux-menu-group', 'Utilities',
                    '--linux-shortcut',
            ]
            imageOptions += [
                    '--icon', 'src/main/resources/icon.png'
            ]

            if (osdetector.release.isLike('debian')) {
                installerType = 'deb'
                skipInstaller = false
                installerOptions += [
                        '--linux-deb-maintainer', 'mark.nellemann@gmail.com'
                ]
            } else if (osdetector.release.isLike('centos')) {
                installerType = 'rpm'
                skipInstaller = false
                installerOptions += [
                        '--linux-rpm-license-type', 'APACHE-20'
                ]
            }

        }

    }

}