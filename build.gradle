plugins {
    id 'java'
    id 'groovy'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.google.osdetector' version '1.7.3'
    id 'org.beryx.jlink' version '3.0.1'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'dse.demo'
    mainClass = 'dse.demo.Main'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        //vendor = JvmVendorSpec.BELLSOFT
    }
        modularity.inferModulePath.set(false)
}

javafx {
    version = '21.0.4'
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
}

dependencies {
    testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
    testImplementation 'org.slf4j:slf4j-simple:2.0.13'
    implementation 'org.slf4j:slf4j-api:2.0.12'
    implementation 'org.slf4j:slf4j-simple:2.0.13'
    implementation "javax.annotation:javax.annotation-api:1.3.2"                    // Used by afterburner.fx
    implementation 'io.github.mkpaz:atlantafx-base:2.0.1'
    implementation 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'io.fair-acc:chartfx:11.3.1'
    //implementation 'com.github.Danish-Sensor-Engineering:libdse-java:[1.0.0,2.0.0)'
    implementation 'dse.libs:libdse-java:[1.0.0,2.0.0)'
}

jlink {

    forceMerge 'org.slf4j'
    forceMerge 'com.fazecast.jSerialComm'

    options = [
            '--strip-debug',
            '--no-header-files',
            '--no-man-pages'
    ]
    launcher {
        name = 'DSE-Demo'
        noConsole = true
        jvmArgs = [
                '-XX:+ExitOnOutOfMemoryError',
                '-XX:+UseZGC',
                '-XX:+ZGenerational',
                '-XX:ConcGCThreads=1'
        ]
    }

    // Only works from Java 14+
    jpackage {
        imageName = "DSE-Demo"
        skipInstaller = true
        installerName = "DSE-Demo_${osdetector.arch}"
        installerOptions += [
                '--app-version', version,
                '--vendor', 'Danish Sensor Engineering',
                '--copyright', 'Danish Sensor Engineering ApS',
                '--description', 'Demonstration App'
        ]

        // Requires: https://wixtoolset.org/ to create installer on Windows
        if(osdetector.os == 'windows') {
            installerType = 'msi'
            skipInstaller = false
            installerOptions += [
                    '--win-menu',
                    '--win-dir-chooser',
                    '--win-help-url', 'https://github.com/Danish-Sensor-Engineering/dse-demo',
                    '--win-update-url', 'https://github.com/Danish-Sensor-Engineering/dse-demo/releases',
                    //'--icon', 'src/main/resources/icon.png'
            ]
        }

        // Requires: xcode-select --install
        if(osdetector.os == 'osx') {
            installerType = 'dmg'
            skipInstaller = false
            installerOptions += [
                    //'--icon', 'src/main/resources/icon.icns'
            ]
        }

        // Requires: build-rpm / rpm and dpkg-dev
        if(osdetector.os == 'linux') {
            skipInstaller = false
            installerOptions += [
                    '--linux-shortcut',
                    '--linux-rpm-license-type', 'APACHE-20',
                    '--linux-deb-maintainer', 'dse@sensor.dk',
                    //'--icon', 'src/main/resources/icon.png',
            ]
        }

    }

}